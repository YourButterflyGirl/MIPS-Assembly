	.data

temparray: .word 0:10					#Allocates an array of 10 integers, all initialized to 0
str: .asciiz "\nGive Temperature "			#we declare storage for str, str1,
str1: .asciiz "Give the number of temperatures: "	#str2, str3 and str4
str2: .asciiz "Moving Averages: "			#and we initialize them
str3: .asciiz "Average temperatures per "		#(which due to asciiz 
str4: .asciiz " years: \n"				#they get null-terminated)

	.text

main:

	li $s0, 1		
	la $s1, temparray	
	li $s1, 0		

inserttemp:

	li $v0, 4			
	la $a0, str			
	syscall			

	li $v0, 1			
	move $a0, $s0				
	syscall				

	li $v0, 11		
	la $a0, ':'			
	syscall				

	li $v0, 5			
	syscall				
	move $s2, $v0			

	sw $s2, temparray+ 0($s1)	

	addi $s1, $s1, 4		
	addi $s0, $s0, 1	 

	blt $s0, 11, inserttemp 	

givek:	
	
	li $v0, 4		
	la $a0, str1		
	syscall			

	li $v0, 5		
	syscall			
	move $s4, $v0		

	move $a1, $s4		

	li $s1, 0		

	la $a0, temparray	 

	la $a0, str3		
	li $v0, 4		
	syscall			

	li $v0, 1		
	move $a0, $s4		
	syscall			

	la $a0, str4		
	li $v0, 4		
	syscall			

callfunc:
	
	move $a0, $s1		

	jal func_label		 

	li $v0, 2	
	mov.s $f12, $f0		
	syscall			

	la $a0, ' '		
	li $v0, 11		
	syscall			

	addi $s1, $s1, 1	

	blt $t4, 40, callfunc	 

	j exit			

func_label:

	mul $a0, $a0, 4		

	li $t0, 0		

sumtemp:
	
	lw $t1, temparray+ 0($a0)	

	move $t2, $t1			

	add $t0, $t0, $t2		
	addi $a0, $a0, 4		
	addi $a1, $a1, -1	

	bgt $a1, $zero, sumtemp		

	move $a1, $s4			

	mtc1 $t0, $f1			
	cvt.s.w $f1, $f1		

	mtc1 $a1, $f2			
	cvt.s.w $f2, $f2		

	div.s $f0, $f1, $f2		

	move $t4, $a0			

	jr $ra			

exit:

	li $v0, 10	
	syscall		
	

	